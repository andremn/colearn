@model FinalProject.ViewModels.StudentSearchViewModel
@{
    ViewBag.Title = "Busca";

    var studentMinAvgRating = Model?.StudentMinAvgRating ?? 0f;
}

<link href="//netdna.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css" rel="stylesheet">
<link href="~/Content/star-rating.min.css" rel="stylesheet">
<link href="~/Content/theme-krajee-fa.min.css" rel="stylesheet">
<link href="~/Content/bootstrap-select.min.css" rel="stylesheet">

@Styles.Render("~/bundles/search-style")

<div class="container" style="margin-top: 30px;">
    <div class="row">
        <section class="text-center col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2">
            <h4>Pesquise por estudantes com características específicas</h4>
            <br/>
            @using (Html.BeginForm("SearchStudents", "Search", FormMethod.Post, new { id = "searchForm" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-group">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-user"></i></span>
                        @Html.TextBoxFor(m => m.StudentName, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.StudentName) })
                    </div>
                </div>

                <div class="form-group">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-university"></i></span>
                        <select id="institutions" name="Institutions"
                                class="selectpicker form-control"
                                data-live-search="true"
                                title="Todas as instituições"
                                data-live-search-placeholder="Procure por uma instituição"
                                data-style="btn-default select-btn"
                                data-selectOnTab="true"
                                data-none-results-text="Nenhuma instituição encontrada"
                                multiple="multiple">

                            @if (Model?.SelectInstitutions?.Count > 0)
                            {
                                foreach (var institution in Model.SelectInstitutions)
                                {
                                    var institutionName = $"{institution.FullName} ({institution.ShortName})";

                                    <option class="filter-item items"
                                            data-filter="@institution.FullName @institution.ShortName"
                                            data-value="@institution.Id"
                                            data-subtext="@institution.ShortName"
                                            value="@institution.Id">
                                        @institutionName
                                    </option>
                                }
                            }
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-graduation-cap" aria-hidden="true"></i></span>

                        <select id="gradeSelect" name="Grades" class="selectpicker form-control"
                                data-style="btn-default select-btn"
                                data-selectOnTab="true"
                                title="Todos os níveis"
                                multiple="multiple">

                            @if (Model?.SelectGrades != null && Model.SelectGrades.Count > 0)
                            {
                                foreach (var grade in Model.SelectGrades)
                                {
                                    var gradeName = grade.Name;

                                    if (grade.IsSelected)
                                    {
                                        <option class="filter-item items"
                                                selected="selected"
                                                data-filter="@gradeName"
                                                data-value="@grade.Id"
                                                value="@grade.Id">
                                            @gradeName
                                        </option>
                                    }
                                    else
                                    {
                                        <option class="filter-item items"
                                                data-filter="@gradeName"
                                                data-value="@grade.Id"
                                                value="@grade.Id">
                                            @gradeName
                                        </option>
                                    }
                                }
                            }
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-star"></i></span>
                        <div class="form-control rating-input-box text-left">
                            <input id="ratingInput" class="kv-ltr-theme-fa-star" data-step="0.5"
                                   name="StudentMinAvgRating" value="@studentMinAvgRating"
                                   dir="ltr" data-size="xs"/>
                        </div>
                        <span id="ratingLabel" class="input-group-addon"><b>@studentMinAvgRating</b></span>
                    </div>
                </div>

                <div class="form-group">
                    <button id="clearBtn" class="btn btn-default">Limpar</button>
                    <button id="searchBtn" class="btn btn-primary">Procurar</button>
                </div>
            }
        </section>
    </div>

    <br/>

    <div class="cssload-container">
        <div class="cssload-double-torus"></div>
    </div>

    <div id="search" class="row collpase">
    </div>

    <div id="recommended" class="row collapse">
        
    </div>
</div>

<div class="popup"></div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/select")
    <script type="text/javascript" src="@Url.Content("~/Scripts/star-rating.min.js")"></script>
    @Scripts.Render("~/bundles/search")
}